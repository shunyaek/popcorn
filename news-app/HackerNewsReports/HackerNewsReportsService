#!/usr/bin/env python

import requests
import schedule
from datetime import datetime, timedelta

HackerNewsBaseURL = "https://hacker-news.firebaseio.com/v0/"


def getMaxItem():
    HackerNewsMaxItemURL = HackerNewsBaseURL + "maxitem.json"
    response = requests.get(HackerNewsMaxItemURL)
    response_json = response.json()
    return response_json


def walkback():
    current_item = getMaxItem()
    for item in range(current_item, 0):
        getItem(item)


def getNewStories():
    HackerNewsNewStoriesURL = HackerNewsBaseURL + "newstories.json"
    response = requests.get(HackerNewsNewStoriesURL)
    response_json = list(response.json())
    return response_json


def getTopStories():
    HackerNewsTopStoriesURL = HackerNewsBaseURL + "topstories.json"
    response = requests.get(HackerNewsTopStoriesURL)
    response_json = list(response.json())
    return response_json


def getBestStories():
    HackerNewsBestStoriesURL = HackerNewsBaseURL + "beststories.json"
    response = requests.get(HackerNewsBestStoriesURL)
    response_json = list(response.json())
    return response_json


def getItem(item_id):
    HackerNewsItemURL = HackerNewsBaseURL + "item/" + str(item_id) + ".json"
    response = requests.get(HackerNewsItemURL)
    response_json = response.json()
    return response_json


def fetchHackerNewsTopStories():
    HackerNewsTopStoriesURL = HackerNewsBaseURL + "topstories.json"
    response = requests.get(HackerNewsTopStoriesURL)
    response_json = list(response.json())
    with open("$HOME/.HackerNewsReports_store.txt", mode="r") as store:
        for line in store:
            line = str(line)
            line = line[:-2]
            response_json.append(line)
    response_set = set(response_json)
    return response_set


def storeHackerNewsStories(response_set):
    with open("$HOME/.HackerNewsReports_store.txt", mode="w") as store:
        for item in list(response_set):
            store.write(str(item) + "\n")
    final_data = list(response_set)
    return final_data


""" if __name__ == "__main__":
    top_stories = fetchHackerNewsTopStories()
    hn = storeHackerNewsStories(top_stories)
    test = getItem(8863)
    test_keys = list(test.keys())
    today_timestamp = datetime.now().timestamp()
    today_date = datetime.now().strftime("%Y-%m-%d")
    yesterday_timestamp = (datetime.now() - timedelta(1)).timestamp()
    yesterday_date = (datetime.now() - timedelta(1)).strftime("%Y-%m-%d")
    print(today_timestamp, yesterday_timestamp)
    print(today_date, yesterday_date)
    for key in test_keys:
        print(str(key) + ": " + str(test[key])) """

if __name__ == "__main__":
    for i in range(1, 10):
        print(str(i) + " : " + str(getItem(i)))


# by, time, title, type, url
