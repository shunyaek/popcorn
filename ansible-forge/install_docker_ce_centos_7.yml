- hosts: docker
  gather_facts: false
  name: "Installs Docker CE on CentOS 7"
  tasks:
    - name: Uninstalling old versions of Docker if they exist
      yum:
        name: "{{ packages }}"
        state: absent
      become: yes
      vars:
        packages:
          - docker
          - docker-client
          - docker-client-latest
          - docker-common
          - docker-latest
          - docker-latest-logrotate
          - docker-logrotate
          - docker-engine
      register: stdout
    - debug:
        msg: "{{ stdout }}"
    - name: Install yum-utils which provides yum-config-manager utility
      yum:
        name: yum-utils
        state: latest
      become: yes
      register: stdout
    - debug:
        msg: "{{ stdout }}"
    - name: Set up Docker repository
      shell:
        cmd: sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
        creates: /etc/yum.repos.d/docker-ce.repo
      register: stdout
    - debug:
        msg: "{{ stdout }}"
    - name: Install Docker CE and containerd
      yum:
        name: "{{ packages }}"
        state: latest
      become: yes
      vars:
        packages:
          - docker-ce
          - docker-ce-cli
          - containerd.io
      register: stdout
    - debug:
        msg: "{{ stdout }}"
    - name: Start Docker service
      service:
        name: docker
        state: started
      become: yes
    - name: Enable Docker service, and not touch the state
      service:
        name: docker
        enabled: yes
      become: yes
    - name: Populate service facts
      service_facts:
    - debug:
        var: ansible_facts.services["docker.service"]
    - name: Create a "docker" group
      group:
        name: docker
        state: present
      register: stdout
    - debug:
        msg: "{{ stdout }}"
    - name: Add user to the "docker" group
      user:
        name: centos
        groups: docker
        append: yes
      become: yes
    - name: Check Docker version
      shell: docker --version
      register: stdout
    - debug:
        msg: "{{ stdout }}"
